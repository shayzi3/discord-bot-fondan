import asyncio

import disnake
import sqlite3 as sql

from typing import Optional, Dict
from random import randint
from disnake.ext import commands
from disnake import CmdInter, ButtonStyle, Colour, File
from other import onBalance, offBalance, moneyCheck


# –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è —Å—Ç–∞–≤–∫–∏. –ù–∞–ø—Ä–∏–º–µ—Ä: –°—Ç–∞–≤–∫–∞ - 10. –ü—Ä–∏ –≤—ã–±–æ—Ä–µ 1.5, 10 * 1.5 - –≤—ã–π–≥—Ä—ã—à—å
class SelectButtonColour(disnake.ui.View):
    def __init__(self) -> None:
        super().__init__(timeout=120.0) 
        self.choice: Optional[str] = None
        
    # –£–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ 1.5
    @disnake.ui.button(label='x1.5', emoji='‚ù§Ô∏è', style=ButtonStyle.red)
    async def butt1(self, button: disnake.ui.Button, inter: CmdInter) -> None:
        await inter.response.defer()
        await inter.delete_original_response()
                
        self.choice = 'Red'
        self.stop()
        
    # –£–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ 2
    @disnake.ui.button(label='x2', emoji='üíö', style=ButtonStyle.green)
    async def butt2(self, button: disnake.ui.Button, inter: CmdInter) -> None:
        await inter.response.defer()
        await inter.delete_original_response()
        
        self.choice = 'Green'
        self.stop()
        
    # –£–º–Ω–æ–∂–µ–Ω–∏–µ –Ω–∞ 3.5
    @disnake.ui.button(label='x3.5', emoji='ü©∂', style=ButtonStyle.gray)
    async def butt3(self, button: disnake.ui.Button, inter: CmdInter) -> None:
        await inter.response.defer()
        await inter.delete_original_response()
        
        self.choice = 'Gray'
        self.stop()
        
        
# –ò–≥—Ä–∞ –ö–∞–∑–∏–Ω–æ
class Gaming:
    def __init__(self, guild: disnake.Guild, ctx: CmdInter, choice: str, money: int) -> None:
        self.ctx = ctx 
        self.choice = choice
        self.flag: Optional[str] = None
        self.dict_x: Dict[str, int] = {
            'Red': 1.5,
            'Green': 2,
            'Gray': 3.5
        } 
        self.money = money
        self.guild = guild
        
        
    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–Ω–∏—è –≤—ã–π–≥—Ä–∞–ª –∏–ª–∏ –ø—Ä–æ–∏–≥—Ä–∞–ª –∏–≥—Ä–æ–∫
    async def flags(self) -> None:
        
        # –ï—Å–ª–∏ —Å—Ç–∞–≤–∫–∞ —É–º–Ω–æ–∂–∞–µ—Ç—Å—è –Ω–∞ 1.5 
        if self.choice == 'Red':
            randomize = randint(1, 100)   # –®–∞–Ω—Å 30%
            
            if randomize <= 30:
                self.flag = 'Win'
                
            else:
                self.flag = 'Lose'
        
        # –ï—Å–ª–∏ —Å—Ç–∞–≤–∫–∞ —É–º–Ω–æ–∂–∞–µ—Ç—Å—è –Ω–∞ 2
        elif self.choice == 'Green':
            randomize = randint(1, 100)   # –®–∞–Ω—Å 15%
            
            if randomize <= 15:
                self.flag = 'Win'
                
            else:
                self.flag = 'Lose'
        
        # –ï—Å–ª–∏ —Å—Ç–∞–≤–∫–∞ —É–º–Ω–æ–∂–∞–µ—Ç—Å—è –Ω–∞ 3.5
        elif self.choice == 'Gray':
            randomize = randint(1, 100)   # –®–∞–Ω—Å 5%
            
            if randomize <= 5:
                self.flag = 'Win'
                
            else:
                self.flag = 'Lose'
           
        # –ï—Å–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –≤—ã–±—Ä–∞–ª –Ω–∏—á–µ–≥–æ     
        else:
            return await self.ctx.send('–¢—ã –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–ª –≤—ã–±–æ—Ä.', ephemeral=True)
        
        await self.ruletka()   # –û—Å–Ω–æ–≤–Ω–∞—è —á–∞—Å—Ç—å –∏–≥—Ä—ã
        
        
    # Function for output about win or loser player
    async def ruletka(self) -> None:
        emb_text = disnake.Embed(colour=Colour.dark_gray())
        emb_text.add_field(name='–ù–∞—á–∏–Ω–∞–µ–º —Ä–∞—Å–∫—É—Ä—Ç –∫–æ–ª–µ—Å–∞. –ñ–¥–∏—Ç–µ 5 —Å–µ–∫—É–Ω–¥...', value=' **–ñ–µ–ª–∞—é –≤–∞–º —É–¥–∞—á–∏!** ')
        emb_text.set_thumbnail(file=File(fp=r'Pictures\casinowheel.gif'))
            
        await self.ctx.send(embed=emb_text, ephemeral=True)
            
            
        await asyncio.sleep(5)   # –ñ–¥—ë–º 5 —Å–µ–∫—É–Ω–¥ –¥–æ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
        
        
        # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –≤—ã–π–≥—Ä–∞–ª
        if self.flag == 'Win':
            await onBalance(self.guild.id, self.ctx.author.id, self.money * self.dict_x[self.choice])   
            
                
            emb_text = disnake.Embed(colour=Colour.dark_gray())
            emb_text.add_field(name=f'–í—ã–ø–∞–ª–æ –ø–æ–ª–µ {self.choice}. –¢–≤–æ—è —Å—Ç–∞–≤–∫–∞ –º–æ–Ω–µ—Ç {self.money}. –¢–≤–æ–π –≤—ã–π–≥—Ä—ã—à {self.money * self.dict_x[self.choice]}', value=' **–ü–æ–∑–¥—Ä–∞–≤–ª—è—é —Ç–µ–±—è!** ')
            emb_text.set_thumbnail(file=File(fp=r'Pictures\top.jpg'))
        
            await self.ctx.send(embed=emb_text, ephemeral=True) 
        
        
        # –ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –ø—Ä–æ–∏–≥—Ä–∞–ª
        elif self.flag == 'Lose':
            await offBalance(self.guild.id, self.ctx.author.id, self.money)
            
            emb_text = disnake.Embed(colour=Colour.dark_gray())
            emb_text.add_field(name=f'–¢–µ–±–µ –Ω–µ –ø–æ–≤–µ–∑–ª–æ! –¢—ã –ø—Ä–æ–∏–≥—Ä–∞–ª {self.money} –º–æ–Ω–µ—Ç...', value=' **–í —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ –ø–æ–ª—É—á–∏—Ç—Å—è?! :)** ')
            emb_text.set_thumbnail(file=File(fp=r'Pictures\bad.jpg'))
        
            await self.ctx.send(embed=emb_text, ephemeral=True)
            

class BindCog(commands.Cog):
    def __init__(self, bot: commands.Bot) -> None:
        self.bot = bot
        
        
    # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    @commands.slash_command(description='–ü–æ–ø—Ä–æ–±—É–π –≤—ã–π–≥—Ä–∞—Ç—å —Å—Ç–∞–≤–∫—É!')
    async def casino(self, inter: CmdInter, money: int) -> None:
        await inter.response.defer()
        if money <= 0:
            return await inter.delete_original_response()
        
        if await moneyCheck(inter.guild.id, inter.author.id, money):
            return await inter.send(f'{inter.author.mention}, —É —Ç–µ–±—è –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –Ω–µ—Ç {money} –º–æ–Ω–µ—Ç!', ephemeral=True)
            
        view = SelectButtonColour()
        title = f'{inter.author.mention}, –≤—ã–±–µ—Ä–∏ —É–º–Ω–æ–∂–µ–Ω–∏—è —Ç–≤–æ–µ–π —Å—É–º–º—ã –ø—Ä–∏ –ø–æ–±–µ–¥–µ. –ß–µ–º –±–æ–ª—å—à–µ —Å—Ç–∞–≤–∫–∞ —Ç–µ–º –º–µ–Ω—å—à–µ —à–∞–Ω—Å –≤—ã–π–≥—Ä–∞—Ç—å!'
        
        await inter.send(title, view=view, ephemeral=True)
        await view.wait()   # –∂–¥—ë–º –æ—Ç–≤–µ—Ç–∞ –æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–∞
        
        
        game = Gaming(inter.guild, inter, view.choice, money)
        await game.flags()
        
        

def setup(bot: commands.Bot) -> None:
    bot.add_cog(BindCog(bot))