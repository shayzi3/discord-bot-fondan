import disnake

from random import choice
from disnake.ext import commands

from database.src.db.base import data_funcs
from bot.utils.box import box
from database.src.db.schemas import BaseMode



class Gaming:
     def __init__(
          self, 
          guild_id: int, 
          author: disnake.Member, 
          member: disnake.Member, 
          bot: commands.Bot
     ) -> None:
          
          self.__author = author
          self.__member = member
          self.__guild_id = guild_id
          self.__bot = bot         
        
        
     async def send_who_first(self) -> None:
          embed_a = await box(
               title=' ```–¢—ã –Ω–∞—á–∏–Ω–∞–µ—à—å –∏–≥—Ä—É.``` ', 
               description='!.shoot - —á—Ç–æ–±—ã —Å—Ç—Ä–µ–ª—å–Ω—É—Ç—å'
          )
          embed_m = await box(
               title=f'```–ò–≥—Ä—É –Ω–∞—á–∏–Ω–∞–µ—Ç {self.__author.name}.```', 
               description='!.shoot - —á—Ç–æ–±—ã —Å—Ç—Ä–µ–ª—å–Ω—É—Ç—å'
          )
          
          await self.__author.send(embed=embed_a, delete_after=60)
          await self.__member.send(embed=embed_m, delete_after=60)          
          await self.author_start()
          
          
            
            
     async def author_start(
          self, 
          patrons: list[int] | None = None, 
          patron_shot: int | None = None
     ) -> None:
          def check(m: disnake.Member) -> bool:
               return m.author == self.__author
          
          
          if not patrons and not patron_shot:
               patrons = [1, 2, 3, 4, 5, 6]
               patron_shot = choice(patrons)
          
         
          
          try:
               message = await self.__bot.wait_for('message', check=check,  timeout=60)
               
               if message.content == '!.shoot':
                    rnd = choice(patrons)
                    
                    if rnd == patron_shot:
                         await data_funcs.balance(
                              id_guild=self.__guild_id,
                              id_member=self.__member.id,
                              cash=15,
                              mode=BaseMode.ON
                         )
                         
                         embed = await box(
                              title=f'üî• –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –≤—ã–π–≥—Ä–∞–ª! –¢—ã –ø–æ–ª—É—á–∞–µ—à—å 15 –º–æ–Ω–µ—Ç.'
                         )
                         await self.__member.send(embed=embed, delete_after=60)
                         
                         
                         embed.title = 'üò¢ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!'
                         await self.__author.send(embed=embed, delete_after=60)
                         
                         
                    else:
                         patrons.remove(rnd)
                         
                         title_author = f'–¢–µ–±–µ –ø–æ–≤–µ–∑–ª–æ, —Ä–µ–≤–æ–ª—å–≤–µ—Ä –Ω–µ –≤—ã—Å—Ç—Ä–µ–ª–∏–ª! –û—á–µ—Ä–µ–¥—å {self.__member.name}.'
                         title_member = f'–ù–∞ —ç—Ç–æ—Ç —Ä–∞–∑ {self.__author.name} –ø–æ–≤–µ–∑–ª–æ! –¢–≤–æ—è –æ—á–µ—Ä–µ–¥—å!'
                         
                         await self.__author.send(title_author, delete_after=60)
                         await self.__member.send(title_member, delete_after=60)
                         
                         await self.member_start(patrons, patron_shot)
                         
               else:
                    await self.__author.send('–ù—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É !.shoot', delete_after=60)
                    await self.author_start(patrons, patron_shot)
                         
          except Exception as ex:
               print(ex)
               
               title_end = '–ò–≥—Ä–∞ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∞! –ü–æ—Ç–æ–º—É - —á—Ç–æ –æ–¥–∏–Ω –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª !.shot.'
               
               await self.__author.send(title_end, delete_after=60)  
               await self.__member.send(title_end, delete_after=60)
               
               
               
               
     async def member_start(self, patrons: list[int], patron_shot: int) -> None:
          def check(m: disnake.Member) -> bool:
               return m.author == self.__member
          
          try:
               message = await self.__bot.wait_for('message', check=check,  timeout=60)
                    
               if message.content == '!.shoot':
                    random = choice(patrons)
                    
                    if random == patron_shot:
                         await data_funcs.balance(
                              id_guild=self.__guild_id,
                              id_member=self.__author.id,
                              cash=15,
                              mode=BaseMode.ON
                         )
                         embed = await box(
                              title=f'üî• –ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –≤—ã–π–≥—Ä–∞–ª! –¢—ã –ø–æ–ª—É—á–∞–µ—à—å 15 –º–æ–Ω–µ—Ç.'
                         )
                         await self.__author.send(embed=embed, delete_after=60)
                        
                         embed.title = 'üò¢ –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç—ã –ø—Ä–æ–∏–≥—Ä–∞–ª!'
                         await self.__member.send(embed=embed, delete_after=60)
                    
                    
                    else:
                         patrons.remove(random)
                         
                         title_member = f'–¢–µ–±–µ –ø–æ–≤–µ–∑–ª–æ, —Ä–µ–≤–æ–ª—å–≤–µ—Ä –Ω–µ –≤—ã—Å—Ç—Ä–µ–ª–∏–ª! –û—á–µ—Ä–µ–¥—å {self.__author.name}.'
                         title_author = f'–ù–∞ —ç—Ç–æ—Ç —Ä–∞–∑ {self.__member.name} –ø–æ–≤–µ–∑–ª–æ! –¢–≤–æ—è –æ—á–µ—Ä–µ–¥—å.'
                         
                         await self.__member.send(title_member, delete_after=60)
                         await self.__author.send(title_author, delete_after=60)
                         
                         await self.author_start(patrons, patron_shot)
          
               else:
                    await self.__member.send('–ù—É–∂–Ω–æ –ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É !.shoot', delete_after=60)
                    await self.member_start(patrons, patron_shot)
                         
                         
          except Exception as ex:
               title_end = '–ò–≥—Ä–∞ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∞! –ü–æ—Ç–æ–º—É - —á—Ç–æ –æ–¥–∏–Ω –∏–∑ –∏–≥—Ä–æ–∫–æ–≤ —Ç–∞–∫ –∏ –Ω–µ –Ω–∞–ø–∏—Å–∞–ª !.shot'
               
               await self.__author.send(title_end, delete_after=120.0)
               await self.__member.send(title_end, delete_after=120.0)